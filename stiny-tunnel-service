### BEGIN INIT INFO
# Provides:             stiny-tunnel
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Port forwarding for Stiny
### END INIT INFO

set -e

. /lib/lsb/init-functions

export AUTOSSH_GATETIME=0
CMD="/usr/bin/autossh"
PRIVATE_KEY="/home/pi/.ssh/id_rsa"
LOCAL_PORT=8080
REMOTE_PORT=9000
SERVER="pi@home.stevearc.com"
# This is robust for network failure and power failure
ARGS="-M 0 -o ServerAliveInterval=30 -o ServerAliveCountMax=3 -o ExitOnForwardFailure=yes -nNTy -i $PRIVATE_KEY -R $REMOTE_PORT:localhost:$LOCAL_PORT $SERVER"


case "$1" in
  start)
        log_daemon_msg "Starting Stiny tunnel" "stiny-tunnel" || true
        if start-stop-daemon --start --background --quiet --oknodo --make-pidfile --pidfile /var/run/stiny-tunnel.pid --exec $CMD -- $ARGS; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;
  stop)
        log_daemon_msg "Stopping Stiny tunnel" "stiny-tunnel" || true
        if start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/stiny-tunnel.pid; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;

  restart)
        log_daemon_msg "Restarting Stiny" "stiny-tunnel" || true
        start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile /var/run/stiny-tunnel.pid
        if start-stop-daemon --start --background --quiet --oknodo --make-pidfile --pidfile /var/run/stiny-tunnel.pid --exec $CMD -- $ARGS; then
            log_end_msg 0 || true
        else
            log_end_msg 1 || true
        fi
        ;;

  status)
        status_of_proc -p /var/run/stiny-tunnel.pid $CMD stiny-tunnel && exit 0 || exit $?
        ;;

  *)
        log_action_msg "Usage: /etc/init.d/stiny-tunnel {start|stop|restart|status}" || true
        exit 1
esac

exit 0
